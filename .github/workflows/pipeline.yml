name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests?'
        required: true
        default: 'true'
        type: boolean

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.inputs.run_tests == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: "gradle"

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: make test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  apply-terraform:
    name: Apply Terraform Infra
    if: ${{ github.event_name == 'push' || github.event.inputs.run_tests == 'false' || needs.build-and-test.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials
        uses: Charly-Wolf/my-github-actions/.github/actions/setup-aws@main
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set Terraform variables from secrets
        run: echo "TF_VAR_mongo_uri=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV

      - name: Run Terraform init
        run: make init

      - name: Run Terraform plan
        run: make plan

      - name: Run Terraform apply
        run: make apply

  deploy:
    name: Deploy to Elastic Beanstalk
    needs: apply-terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Build and zip Spring Boot jar
        run: make build-without-tests

      - name: Configure AWS Credentials
        uses: Charly-Wolf/my-github-actions/.github/actions/setup-aws@main
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Upload app.zip to S3
        run: aws s3 cp app.zip s3://tasks-app-demo-from-terraform/

      - name: Create new Elastic Beanstalk application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name tasks-app-demo-from-terraform \
            --version-label $GITHUB_SHA \
            --source-bundle S3Bucket=tasks-app-demo-from-terraform,S3Key=app.zip

      - name: Update Elastic Beanstalk environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name tasks-from-terraform-dev \
            --version-label $GITHUB_SHA
